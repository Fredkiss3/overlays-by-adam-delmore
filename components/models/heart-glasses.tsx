/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: maximkuzlin (https://sketchfab.com/maximkuzlin)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/heart-glasses-ef812c7e7dc14f6b8783ccb516b3495c
title: Heart Glasses
*/

import * as THREE from "three"
import React from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"
import { headTop, headTopLeft, midwayBetweenEyes, ModelProps } from "."
import { useTransforms } from "../../hooks"

type GLTFResult = GLTF & {
  nodes: {
    oprava_geom001_DiffuseMap_0: THREE.Mesh
    glasses_geom_Material001_0: THREE.Mesh
  }
  materials: {
    DiffuseMap: THREE.MeshStandardMaterial
    ["Material.001"]: THREE.MeshPhysicalMaterial
  }
}

export const HeartGlasses = ({ camera, face, ...props }: ModelProps) => {
  const { nodes, materials } = useGLTF(
    "assets/heart-glasses/scene.gltf"
  ) as GLTFResult

  const transforms = useTransforms({
    face,
    camera,
    anchor: {
      index: midwayBetweenEyes,
      offset: { x: 40, y: 0, z: -25 },
    },
    scaleCoefficient: 0.1666666,
  })

  return (
    <group {...transforms} {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group scale={100}>
            <mesh
              geometry={nodes.oprava_geom001_DiffuseMap_0.geometry}
              material={materials.DiffuseMap}
            />
          </group>
          <group scale={100}>
            <mesh
              geometry={nodes.glasses_geom_Material001_0.geometry}
              material={materials["Material.001"]}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload("assets/heart-glasses/scene.gltf")
